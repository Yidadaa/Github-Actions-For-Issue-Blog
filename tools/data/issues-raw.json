{"status":200,"url":"https://api.github.com/repos/Yidadaa/Issue-Blog-With-Github-Action/issues","headers":{"access-control-allow-origin":"*","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","cache-control":"private, max-age=60, s-maxage=60","connection":"close","content-encoding":"gzip","content-security-policy":"default-src 'none'","content-type":"application/json; charset=utf-8","date":"Mon, 01 Feb 2021 09:19:59 GMT","etag":"W/\"4df1782dd5c3bd6c43e5fa588f750ea85e5187c2cc011e2902a531e5a6d13562\"","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","server":"GitHub.com","status":"200 OK","strict-transport-security":"max-age=31536000; includeSubdomains; preload","transfer-encoding":"chunked","vary":"Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With, Accept-Encoding","x-accepted-oauth-scopes":"repo","x-content-type-options":"nosniff","x-frame-options":"deny","x-github-media-type":"github.v3; format=json","x-github-request-id":"048F:64E0:1ECD32:22C44A:6017C7BE","x-oauth-scopes":"public_repo","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4995","x-ratelimit-reset":"1612174070","x-ratelimit-used":"5","x-xss-protection":"1; mode=block"},"data":[{"url":"https://api.github.com/repos/Yidadaa/Issue-Blog-With-Github-Action/issues/1","repository_url":"https://api.github.com/repos/Yidadaa/Issue-Blog-With-Github-Action","labels_url":"https://api.github.com/repos/Yidadaa/Issue-Blog-With-Github-Action/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/Yidadaa/Issue-Blog-With-Github-Action/issues/1/comments","events_url":"https://api.github.com/repos/Yidadaa/Issue-Blog-With-Github-Action/issues/1/events","html_url":"https://github.com/Yidadaa/Issue-Blog-With-Github-Action/issues/1","id":561488648,"node_id":"MDU6SXNzdWU1NjE0ODg2NDg=","number":1,"title":"Hello World","user":{"login":"Yidadaa","id":16968934,"node_id":"MDQ6VXNlcjE2OTY4OTM0","avatar_url":"https://avatars.githubusercontent.com/u/16968934?v=4","gravatar_id":"","url":"https://api.github.com/users/Yidadaa","html_url":"https://github.com/Yidadaa","followers_url":"https://api.github.com/users/Yidadaa/followers","following_url":"https://api.github.com/users/Yidadaa/following{/other_user}","gists_url":"https://api.github.com/users/Yidadaa/gists{/gist_id}","starred_url":"https://api.github.com/users/Yidadaa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yidadaa/subscriptions","organizations_url":"https://api.github.com/users/Yidadaa/orgs","repos_url":"https://api.github.com/users/Yidadaa/repos","events_url":"https://api.github.com/users/Yidadaa/events{/privacy}","received_events_url":"https://api.github.com/users/Yidadaa/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/Yidadaa/Issue-Blog-With-Github-Action/milestones/1","html_url":"https://github.com/Yidadaa/Issue-Blog-With-Github-Action/milestone/1","labels_url":"https://api.github.com/repos/Yidadaa/Issue-Blog-With-Github-Action/milestones/1/labels","id":5081043,"node_id":"MDk6TWlsZXN0b25lNTA4MTA0Mw==","number":1,"title":"Example","description":"Just an example.","creator":{"login":"Yidadaa","id":16968934,"node_id":"MDQ6VXNlcjE2OTY4OTM0","avatar_url":"https://avatars.githubusercontent.com/u/16968934?v=4","gravatar_id":"","url":"https://api.github.com/users/Yidadaa","html_url":"https://github.com/Yidadaa","followers_url":"https://api.github.com/users/Yidadaa/followers","following_url":"https://api.github.com/users/Yidadaa/following{/other_user}","gists_url":"https://api.github.com/users/Yidadaa/gists{/gist_id}","starred_url":"https://api.github.com/users/Yidadaa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yidadaa/subscriptions","organizations_url":"https://api.github.com/users/Yidadaa/orgs","repos_url":"https://api.github.com/users/Yidadaa/repos","events_url":"https://api.github.com/users/Yidadaa/events{/privacy}","received_events_url":"https://api.github.com/users/Yidadaa/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":0,"state":"open","created_at":"2020-02-07T08:22:42Z","updated_at":"2020-02-07T08:35:11Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2020-02-07T08:21:52Z","updated_at":"2021-02-01T09:15:14Z","closed_at":null,"author_association":"OWNER","active_lock_reason":null,"body":"## Method\r\nIn this section, we describe our unsupervised framework for monocular depth estimation. We first review the self-supervised training pipeline for monocular depth estimation, and then introduce the co-attention module and pose graph consistency loss function.\r\n\r\n### Supervision from Image Reconstruction\r\nFollowing the formulation in \\cite{zhou_unsupervised_2017}, the whole framework includes a DispNet and a PoseNet, the DispNet produces depth map and the PoseNet produces the relative pose between two RGB frames.\r\n\r\nGiven a sequence of consecutive frames $X_{t-1}, X_t$ and $X_{t+1}$ï¼Œwe estimate the depth for each frame, and the relative pose for every two adjacent frames, then we get depth map $D_{t-1}, D_t, D_{t+1}$ and translation matrix $T_{t-1\\rightarrow t}, T_{t\\rightarrow t+1}$.\r\n\r\nConsider the adjacent frame pair $I_t$ and $I_{t+1}$, once the estimated depth $D_t$ and translation matrix $T_{t\\rightarrow t+1}$ are available, we can project the source image $I_t$ to the next moment\r\n\r\n$$\r\np(\\hat{I}_{t+1}) = KT_{t\\rightarrow t+1}D_tK^{-1}p(I_t)\r\n$$\r\n\r\nthe function $p(.)$ denotes sampling from the homogeneous coordinates of image and $K$ denotes the camera insrinsic matrix, $\\hat{I}_{t+1}$ can be reconstucted using the differentiable sampling mechanism proposed in \\cite{jaderberg_spatial_2015}.\r\n\r\nHence the problem is formulated to the minimization of a phtometric reprojection error $L_p$\r\n\r\n$$\r\nL_p = \\alpha \\left\\|I_{t+1} - \\hat{I}_{t+1}\\right\\|_1 + (1 - \\alpha)SSIM(I_{t+1}, \\hat{I}_{t+1})\r\n$$\r\n\r\n$SSIM(.)$ is the structural similarity\\cite{wang_image_2004} loss for evaluating the quality of image predictions, and to regularize the depth, we use a disparity image smoothness constraint as widely used in previous work\\cite{mahjourian_unsupervised_2018,zhou_unsupervised_2017,garg_unsupervised_2016}\r\n\r\n$$\r\nL_{\\mathrm{s}}=\\sum_{x, y}\\left\\|\\partial_{x} D_{t}\\right\\| e^{-\\left\\|\\partial_{x} I_{t}\\right\\|}+\\left\\|\\partial_{y} D_{t}\\right\\| e^{-\\left\\|\\partial_{y} I_{t}\\right\\|}\r\n$$\r\n\r\n## List\r\nHere is a list:\r\n- Xue Bai, Jue Wang, David Simons, and Guillermo Sapiro.Video SnapCut: robust video object cutout using localized classifiers. TOG, 28(3):70, 2009.\r\n- Linchao Bao, Baoyuan Wu, and Wei Liu. CNN in MRF: Video object segmentation via inference in a CNN-based higher-order spatio-temporal MRF. In CVPR, 2018\r\n\r\n## Code\r\nHere is some code:\r\n```python\r\ndef bi_search(arr:list, x:int):\r\n  l, r = 0, len(arr)\r\n  while l < r:\r\n    m = (l + r) >> 1\r\n    if arr[m] >= x: r = m\r\n    else: l = m + 1\r\n  return l\r\n```\r\n\r\n## Image\r\n![image](https://user-images.githubusercontent.com/16968934/99829739-a0a29e00-2b97-11eb-9258-358f5ad59c44.png)\r\n","performed_via_github_app":null}]}